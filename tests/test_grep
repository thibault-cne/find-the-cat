#!/bin/bash

REQUIRED_FILE="./ftc"

if [ ! -f ${REQUIRED_FILE} ] 
then
    echo "‚ö†Ô∏è Executable ${REQUIRED_FILE} not found."
    exit 1
fi

function test_find_grep () {
    if [ ! "$(./ftc "$1" "-ctc" "$2")" == "$(grep "-rl" "$2" "$1"/*)" ];
    then
        echo "üî¥ Test of \"catch the cat\" failed for \"$2\""
        echo "$(./ftc $1 "-ctc" "$2" | wc -l)"
        echo "$(grep "-rl" "$2" $1/* | wc -l)"
    else
        echo "‚úÖ Test of \"catch the cat\" succeeded (string: \"$2\")."
    fi
}

test_find_grep "arbre" "audience do pipoulapi" "arbre/sell/foreign.mp3"

function test_find_grep_nb () {
    if [ ! "$(./ftc "$1" "-ctc" "$2" | wc -l)" == "$(grep "-rl" "$2" "$1"/* | wc -l)" ];
    then
        echo "üî¥ Test of \"catch the cat\" failed for \"$2\""
        echo "$(./ftc $1 "-ctc" $2 | wc -l)"
        echo "$(grep "-r" "$2" $1/* | wc -l)"
        exit 1
    else
        echo "‚úÖ Test of \"catch the cat\" succeeded (string: \"$2\")."
    fi
}

test_find_grep_nb "arbre" "Property current include"

function test_find_grep_regex () {
    if [ ! "$(./ftc "$1" "-ctc" "$2" | wc -l)" == "$(grep "-rl" "$2" "$1"/* | wc -l)" ];
    then
        echo "üî¥ Test of \"catch the cat\" with regex failed for \"$2\""
    else
        echo "‚úÖ Test of \"catch the cat\" with regex succeeded (regex: \"$2\")."
    fi
}

test_find_grep_regex "arbre" "than star.*"